{"ast":null,"code":"import _slicedToArray from \"/Users/vlecoq-v/42/NewMatcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vlecoq-v/42/NewMatcha/client/src/Components/Contact/contact.js\";\nimport React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\"; // import { DisplayFormikState } from './formikHelper';\n\nconst styles = {};\nconst contactFormEndpoint = process.env.REACT_APP_CONTACT_ENDPOINT;\n\nfunction Contact(props) {\n  const classes = props.classes;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isSubmitionCompleted = _useState4[0],\n        setSubmitionCompleted = _useState4[1];\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleClickOpen() {\n    setSubmitionCompleted(false);\n    setOpen(true);\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Contact us!\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, !isSubmitionCompleted && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Contact\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Send us a comment!\"), React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      name: \"\",\n      comment: \"\"\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setSubmitting(true);\n      axios.post(contactFormEndpoint, values, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(resp => {\n        setSubmitionCompleted(true);\n      });\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\"),\n      name: Yup.string().required(\"Required\"),\n      comment: Yup.string().required(\"Required\")\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props => {\n    const values = props.values,\n          touched = props.touched,\n          errors = props.errors,\n          dirty = props.dirty,\n          isSubmitting = props.isSubmitting,\n          handleChange = props.handleChange,\n          handleBlur = props.handleBlur,\n          handleSubmit = props.handleSubmit,\n          handleReset = props.handleReset;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"name\",\n      name: \"name\",\n      className: classes.textField,\n      value: values.name,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.name && touched.name && errors.name,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: errors.email && touched.email,\n      label: \"email\",\n      name: \"email\",\n      className: classes.textField,\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.email && touched.email && errors.email,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      label: \"comment\",\n      name: \"comment\",\n      className: classes.textField,\n      value: values.comment,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.comment && touched.comment && errors.comment,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      className: \"outline\",\n      onClick: handleReset,\n      disabled: !dirty || isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(Button, {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Submit\")));\n  }))), isSubmitionCompleted && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Thanks!\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Thanks\"), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"button\",\n    className: \"outline\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Back to app\"))))));\n}\n\nexport default withStyles(styles)(Contact);","map":{"version":3,"sources":["/Users/vlecoq-v/42/NewMatcha/client/src/Components/Contact/contact.js"],"names":["React","useState","withStyles","TextField","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","axios","Formik","Form","Field","ErrorMessage","Yup","styles","contactFormEndpoint","process","env","REACT_APP_CONTACT_ENDPOINT","Contact","props","classes","open","setOpen","isSubmitionCompleted","setSubmitionCompleted","handleClose","handleClickOpen","email","name","comment","values","setSubmitting","post","headers","then","resp","object","shape","string","required","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","textField"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CACA;;AAEA,MAAMC,MAAM,GAAG,EAAf;AAEA,MAAMC,mBAAmB,GAAGC,OAAO,CAACC,GAAR,CAAYC,0BAAxC;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,QACdC,OADc,GACFD,KADE,CACdC,OADc;;AAAA,oBAEEtB,QAAQ,CAAC,KAAD,CAFV;AAAA;AAAA,QAEfuB,IAFe;AAAA,QAETC,OAFS;;AAAA,qBAGgCxB,QAAQ,CAAC,KAAD,CAHxC;AAAA;AAAA,QAGfyB,oBAHe;AAAA,QAGOC,qBAHP;;AAKtB,WAASC,WAAT,GAAuB;AACrBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAED,WAASI,eAAT,GAA2B;AACzBF,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAED,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAEI,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAIE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEL,IADR;AAEE,IAAA,OAAO,EAAEI,WAFX;AAGE,uBAAgB,mBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAACF,oBAAD,IACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEI,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,IAAI,EAAE,EAAnB;AAAuBC,MAAAA,OAAO,EAAE;AAAhC,KADjB;AAEE,IAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACvCA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAxB,MAAAA,KAAK,CACFyB,IADH,CACQlB,mBADR,EAC6BgB,MAD7B,EACqC;AACjCG,QAAAA,OAAO,EAAE;AACP,yCAA+B,GADxB;AAEP,0BAAgB;AAFT;AADwB,OADrC,EAOGC,IAPH,CAOQC,IAAI,IAAI;AACZX,QAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,OATH;AAUD,KAdH;AAeE,IAAA,gBAAgB,EAAEZ,GAAG,CAACwB,MAAJ,GAAaC,KAAb,CAAmB;AACnCV,MAAAA,KAAK,EAAEf,GAAG,CAAC0B,MAAJ,GACJX,KADI,GAEJY,QAFI,CAEK,UAFL,CAD4B;AAInCX,MAAAA,IAAI,EAAEhB,GAAG,CAAC0B,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAJ6B;AAKnCV,MAAAA,OAAO,EAAEjB,GAAG,CAAC0B,MAAJ,GAAaC,QAAb,CAAsB,UAAtB;AAL0B,KAAnB,CAfpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAuBGpB,KAAK,IAAI;AAAA,UAENW,MAFM,GAWJX,KAXI,CAENW,MAFM;AAAA,UAGNU,OAHM,GAWJrB,KAXI,CAGNqB,OAHM;AAAA,UAINC,MAJM,GAWJtB,KAXI,CAINsB,MAJM;AAAA,UAKNC,KALM,GAWJvB,KAXI,CAKNuB,KALM;AAAA,UAMNC,YANM,GAWJxB,KAXI,CAMNwB,YANM;AAAA,UAONC,YAPM,GAWJzB,KAXI,CAONyB,YAPM;AAAA,UAQNC,UARM,GAWJ1B,KAXI,CAQN0B,UARM;AAAA,UASNC,YATM,GAWJ3B,KAXI,CASN2B,YATM;AAAA,UAUNC,WAVM,GAWJ5B,KAXI,CAUN4B,WAVM;AAYR,WACE;AAAM,MAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAE1B,OAAO,CAAC4B,SAHrB;AAIE,MAAA,KAAK,EAAElB,MAAM,CAACF,IAJhB;AAKE,MAAA,QAAQ,EAAEgB,YALZ;AAME,MAAA,MAAM,EAAEC,UANV;AAOE,MAAA,UAAU,EAAEJ,MAAM,CAACb,IAAP,IAAeY,OAAO,CAACZ,IAAvB,IAA+Ba,MAAM,CAACb,IAPpD;AAQE,MAAA,MAAM,EAAC,QART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEa,MAAM,CAACd,KAAP,IAAgBa,OAAO,CAACb,KADjC;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,SAAS,EAAEP,OAAO,CAAC4B,SAJrB;AAKE,MAAA,KAAK,EAAElB,MAAM,CAACH,KALhB;AAME,MAAA,QAAQ,EAAEiB,YANZ;AAOE,MAAA,MAAM,EAAEC,UAPV;AAQE,MAAA,UAAU,EACRJ,MAAM,CAACd,KAAP,IAAgBa,OAAO,CAACb,KAAxB,IAAiCc,MAAM,CAACd,KAT5C;AAWE,MAAA,MAAM,EAAC,QAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EA0BE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,SAAS,EAAEP,OAAO,CAAC4B,SAHrB;AAIE,MAAA,KAAK,EAAElB,MAAM,CAACD,OAJhB;AAKE,MAAA,QAAQ,EAAEe,YALZ;AAME,MAAA,MAAM,EAAEC,UANV;AAOE,MAAA,UAAU,EACRJ,MAAM,CAACZ,OAAP,IAAkBW,OAAO,CAACX,OAA1B,IAAqCY,MAAM,CAACZ,OARhD;AAUE,MAAA,MAAM,EAAC,QAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,EAsCE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,SAFZ;AAGE,MAAA,OAAO,EAAEkB,WAHX;AAIE,MAAA,QAAQ,EAAE,CAACL,KAAD,IAAUC,YAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EASE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CAtCF,CADF;AAuDD,GA1FH,CAFF,CAFF,CANJ,EAyGGpB,oBAAoB,IACnB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,SAAhC;AAA0C,IAAA,OAAO,EAAEE,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAFF,CAFF,CA1GJ,CAJF,CADF;AA+HD;;AAED,eAAe1B,UAAU,CAACc,MAAD,CAAV,CAAmBK,OAAnB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n// import { DisplayFormikState } from './formikHelper';\n\nconst styles = {};\n\nconst contactFormEndpoint = process.env.REACT_APP_CONTACT_ENDPOINT;\n\nfunction Contact(props) {\n  const { classes } = props;\n  const [open, setOpen] = useState(false);\n  const [isSubmitionCompleted, setSubmitionCompleted] = useState(false);\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleClickOpen() {\n    setSubmitionCompleted(false);\n    setOpen(true);\n  }\n\n  return (\n    <React.Fragment>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Contact us!\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        {!isSubmitionCompleted && (\n          <React.Fragment>\n            <DialogTitle id=\"form-dialog-title\">Contact</DialogTitle>\n            <DialogContent>\n              <DialogContentText>Send us a comment!</DialogContentText>\n              <Formik\n                initialValues={{ email: \"\", name: \"\", comment: \"\" }}\n                onSubmit={(values, { setSubmitting }) => {\n                  setSubmitting(true);\n                  axios\n                    .post(contactFormEndpoint, values, {\n                      headers: {\n                        \"Access-Control-Allow-Origin\": \"*\",\n                        \"Content-Type\": \"application/json\"\n                      }\n                    })\n                    .then(resp => {\n                      setSubmitionCompleted(true);\n                    });\n                }}\n                validationSchema={Yup.object().shape({\n                  email: Yup.string()\n                    .email()\n                    .required(\"Required\"),\n                  name: Yup.string().required(\"Required\"),\n                  comment: Yup.string().required(\"Required\")\n                })}\n              >\n                {props => {\n                  const {\n                    values,\n                    touched,\n                    errors,\n                    dirty,\n                    isSubmitting,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    handleReset\n                  } = props;\n                  return (\n                    <form onSubmit={handleSubmit}>\n                      <TextField\n                        label=\"name\"\n                        name=\"name\"\n                        className={classes.textField}\n                        value={values.name}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={errors.name && touched.name && errors.name}\n                        margin=\"normal\"\n                      />\n\n                      <TextField\n                        error={errors.email && touched.email}\n                        label=\"email\"\n                        name=\"email\"\n                        className={classes.textField}\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={\n                          errors.email && touched.email && errors.email\n                        }\n                        margin=\"normal\"\n                      />\n\n                      <TextField\n                        label=\"comment\"\n                        name=\"comment\"\n                        className={classes.textField}\n                        value={values.comment}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={\n                          errors.comment && touched.comment && errors.comment\n                        }\n                        margin=\"normal\"\n                      />\n                      <DialogActions>\n                        <Button\n                          type=\"button\"\n                          className=\"outline\"\n                          onClick={handleReset}\n                          disabled={!dirty || isSubmitting}\n                        >\n                          Reset\n                        </Button>\n                        <Button type=\"submit\" disabled={isSubmitting}>\n                          Submit\n                        </Button>\n                        {/* <DisplayFormikState {...props} /> */}\n                      </DialogActions>\n                    </form>\n                  );\n                }}\n              </Formik>\n            </DialogContent>\n          </React.Fragment>\n        )}\n        {isSubmitionCompleted && (\n          <React.Fragment>\n            <DialogTitle id=\"form-dialog-title\">Thanks!</DialogTitle>\n            <DialogContent>\n              <DialogContentText>Thanks</DialogContentText>\n              <DialogActions>\n                <Button type=\"button\" className=\"outline\" onClick={handleClose}>\n                  Back to app\n                </Button>\n                {/* <DisplayFormikState {...props} /> */}\n              </DialogActions>\n            </DialogContent>\n          </React.Fragment>\n        )}\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default withStyles(styles)(Contact);\n"]},"metadata":{},"sourceType":"module"}