{"ast":null,"code":"import _slicedToArray from \"/Users/vlecoq-v/42/NewMatcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vlecoq-v/42/NewMatcha/client/src/Components/Contact/contact.js\";\nimport React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport axios from \"axios\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\"; // import { DisplayFormikState } from './formikHelper';\n\nconst styles = {};\nconst contactFormEndpoint = process.env.REACT_APP_CONTACT_ENDPOINT;\n\nfunction Contact(props) {\n  const classes = props.classes;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isSubmitionCompleted = _useState4[0],\n        setSubmitionCompleted = _useState4[1];\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleClickOpen() {\n    setSubmitionCompleted(false);\n    setOpen(true);\n  }\n\n  const initialState = {\n    // fname: \"\",\n    // lname: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  const userSchema = yup.object().shape({\n    fname: yup.string().required(),\n    lname: yup.string().required(),\n    email: yup.string().email().required(),\n    password: yup.string().required().max(13).min(8)\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Contact us!\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose // aria-labelledby=\"form-dialog-title\"\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, !isSubmitionCompleted && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Reister\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Please complete the form to meet new people\"), React.createElement(Formik, {\n    initialValues: initialState,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setSubmitting(true);\n      axios.post(contactFormEndpoint, values, {\n        headers: {\n          // \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(resp => {\n        setSubmitionCompleted(true);\n      });\n    },\n    validationSchema: userSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props => {\n    const values = props.values,\n          touched = props.touched,\n          errors = props.errors,\n          dirty = props.dirty,\n          isSubmitting = props.isSubmitting,\n          handleChange = props.handleChange,\n          handleBlur = props.handleBlur,\n          handleSubmit = props.handleSubmit,\n          handleReset = props.handleReset;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"name\",\n      name: \"name\",\n      className: classes.textField,\n      value: values.name,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.name && touched.name && errors.name,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: errors.email && touched.email,\n      label: \"email\",\n      name: \"email\",\n      className: classes.textField,\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.email && touched.email && errors.email,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      className: \"outline\",\n      onClick: handleReset,\n      disabled: !dirty || isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(Button, {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Submit\")));\n  }))), isSubmitionCompleted && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Thanks!\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Thanks\"), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"button\",\n    className: \"outline\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Back to app\"))))));\n}\n\nexport default withStyles(styles)(Contact);","map":{"version":3,"sources":["/Users/vlecoq-v/42/NewMatcha/client/src/Components/Contact/contact.js"],"names":["React","useState","withStyles","TextField","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","axios","Formik","yup","styles","contactFormEndpoint","process","env","REACT_APP_CONTACT_ENDPOINT","Contact","props","classes","open","setOpen","isSubmitionCompleted","setSubmitionCompleted","handleClose","handleClickOpen","initialState","name","email","password","userSchema","object","shape","fname","string","required","lname","max","min","values","setSubmitting","post","headers","then","resp","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","textField"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport axios from \"axios\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\n// import { DisplayFormikState } from './formikHelper';\n\nconst styles = {};\n\nconst contactFormEndpoint = process.env.REACT_APP_CONTACT_ENDPOINT;\n\nfunction Contact(props) {\n  const { classes } = props;\n  const [open, setOpen] = useState(false);\n  const [isSubmitionCompleted, setSubmitionCompleted] = useState(false);\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleClickOpen() {\n    setSubmitionCompleted(false);\n    setOpen(true);\n  }\n\n  const initialState = {\n    // fname: \"\",\n    // lname: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  const userSchema = yup.object().shape({\n    fname: yup.string().required(),\n    lname: yup.string().required(),\n    email: yup\n      .string()\n      .email()\n      .required(),\n    password: yup\n      .string()\n      .required()\n      .max(13)\n      .min(8)\n  });\n\n  return (\n    <React.Fragment>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Contact us!\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        // aria-labelledby=\"form-dialog-title\"\n      >\n        {!isSubmitionCompleted && (\n          <React.Fragment>\n            <DialogTitle id=\"form-dialog-title\">Reister</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Please complete the form to meet new people\n              </DialogContentText>\n              <Formik\n                initialValues={initialState}\n                onSubmit={(values, { setSubmitting }) => {\n                  setSubmitting(true);\n                  axios\n                    .post(contactFormEndpoint, values, {\n                      headers: {\n                        // \"Access-Control-Allow-Origin\": \"*\",\n                        \"Content-Type\": \"application/json\"\n                      }\n                    })\n                    .then(resp => {\n                      setSubmitionCompleted(true);\n                    });\n                }}\n                validationSchema={userSchema}\n              >\n                {props => {\n                  const {\n                    values,\n                    touched,\n                    errors,\n                    dirty,\n                    isSubmitting,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    handleReset\n                  } = props;\n                  return (\n                    <form onSubmit={handleSubmit}>\n                      <TextField\n                        label=\"name\"\n                        name=\"name\"\n                        className={classes.textField}\n                        value={values.name}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={errors.name && touched.name && errors.name}\n                        margin=\"normal\"\n                      />\n\n                      <TextField\n                        error={errors.email && touched.email}\n                        label=\"email\"\n                        name=\"email\"\n                        className={classes.textField}\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={\n                          errors.email && touched.email && errors.email\n                        }\n                        margin=\"normal\"\n                      />\n\n                      <DialogActions>\n                        <Button\n                          type=\"button\"\n                          className=\"outline\"\n                          onClick={handleReset}\n                          disabled={!dirty || isSubmitting}\n                        >\n                          Reset\n                        </Button>\n                        <Button type=\"submit\" disabled={isSubmitting}>\n                          Submit\n                        </Button>\n                        {/* <DisplayFormikState {...props} /> */}\n                      </DialogActions>\n                    </form>\n                  );\n                }}\n              </Formik>\n            </DialogContent>\n          </React.Fragment>\n        )}\n        {isSubmitionCompleted && (\n          <React.Fragment>\n            <DialogTitle id=\"form-dialog-title\">Thanks!</DialogTitle>\n            <DialogContent>\n              <DialogContentText>Thanks</DialogContentText>\n              <DialogActions>\n                <Button type=\"button\" className=\"outline\" onClick={handleClose}>\n                  Back to app\n                </Button>\n                {/* <DisplayFormikState {...props} /> */}\n              </DialogActions>\n            </DialogContent>\n          </React.Fragment>\n        )}\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default withStyles(styles)(Contact);\n"]},"metadata":{},"sourceType":"module"}