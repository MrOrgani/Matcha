{"ast":null,"code":"import _objectSpread from \"/Users/morgani/AAAA/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/morgani/AAAA/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/morgani/AAAA/Matcha/client/src/Components/Navbar/DrawerNavigation.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\"; // import Button from \"@material-ui/core/Button\";\n\nimport List from \"@material-ui/core/List\"; // import Divider from \"@material-ui/core/Divider\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\"; // import InboxIcon from \"@material-ui/icons/MoveToInbox\";\n// import MailIcon from \"@material-ui/icons/Mail\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { Link } from \"react-router-dom\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Divider from \"@material-ui/core/Divider\"; // import { FiltersProvider } from \"./../../Scenes/Search/Components/FiltersContext\";\n\nimport MenuButton from \"./Components/MenuButton\";\nimport { useCookies } from \"react-cookie\"; // import RangeSlider from \"./Components/RangeSlider\";\n// import { grey } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  },\n  icon: {\n    display: \"flex\"\n  },\n  link: {\n    textDecoration: \"none\",\n    opacity: 0.54,\n    color: \"black\"\n  },\n  top: {\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    textDecoration: \"none\",\n    color: \"white\" // opacity: 0.54\n    // color: \"black\"\n\n  }\n});\nexport default function TemporaryDrawer() {\n  const _useCookies = useCookies([\"auth\"]),\n        _useCookies2 = _slicedToArray(_useCookies, 2),\n        cookies = _useCookies2[0],\n        removeCookies = _useCookies2[1];\n\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    left: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1]; // const [values, setValues] = React.useState([30, 40]);\n  // const range = [18, 100];\n  // const path = window.location.pathname;\n\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      [side]: open\n    }));\n  }; // const handleChange = (event, newValue) => {\n  //   setValues(newValue);\n  // };\n  // DISPLAYS DRAWERS LINK AND ICONS\n\n\n  const iconsAndLinks = param => {\n    const text = param.text,\n          link = param.link;\n    return React.createElement(Link, {\n      to: link,\n      className: classes.link,\n      onClick: () => {\n        text === \"Disconnect\" && removeCookies(\"auth\");\n      },\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, text === \"Home\" && React.createElement(HomeIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), text === \"Search\" && React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), text === \"Disconnect\" && React.createElement(ClearIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), (text === \"Connect\" || text === \"My Account\") && React.createElement(AccountCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, text))));\n  }; // CHECKS IF USER IS AUTH IN COOKIES\n\n\n  const menuItems = [{\n    text: \"Home\",\n    link: \"/\"\n  }];\n\n  if (cookies.auth !== \"undefined\") {\n    menuItems.push({\n      text: \"My Account\",\n      link: \"/signIn\"\n    }, {\n      text: \"Search\",\n      link: \"/Search\"\n    }, {\n      text: \"Disconnect\",\n      link: \"/\"\n    });\n  } else {\n    menuItems.push({\n      text: \"Connect\",\n      link: \"/signIn\"\n    });\n  }\n\n  const sideList = side => {\n    return React.createElement(\"div\", {\n      className: classes.list,\n      role: \"presentation\",\n      onClick: toggleDrawer(side, false),\n      onKeyDown: toggleDrawer(side, false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.top,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      onClick: toggleDrawer(side, false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), \" \", React.createElement(ListItemText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Menu\")))), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, menuItems.map(iconsAndLinks)), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, [\"About us\"].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })))));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: toggleDrawer(\"left\", true),\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(MenuButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), React.createElement(Drawer, {\n    open: state.left // onClose={toggleDrawer(\"left\", false)}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, sideList(\"left\")));\n}","map":{"version":3,"sources":["/Users/morgani/AAAA/Matcha/client/src/Components/Navbar/DrawerNavigation.js"],"names":["React","makeStyles","Drawer","List","ListItem","ListItemIcon","ListItemText","HomeIcon","SearchIcon","ClearIcon","AccountCircleIcon","Link","CloseIcon","Divider","MenuButton","useCookies","useStyles","list","width","fullList","icon","display","link","textDecoration","opacity","color","top","background","TemporaryDrawer","cookies","removeCookies","classes","useState","left","state","setState","toggleDrawer","side","open","event","type","key","iconsAndLinks","param","text","menuItems","auth","push","sideList","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\n// import Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\n// import Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n// import InboxIcon from \"@material-ui/icons/MoveToInbox\";\n// import MailIcon from \"@material-ui/icons/Mail\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { Link } from \"react-router-dom\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Divider from \"@material-ui/core/Divider\";\n// import { FiltersProvider } from \"./../../Scenes/Search/Components/FiltersContext\";\nimport MenuButton from \"./Components/MenuButton\";\nimport { useCookies } from \"react-cookie\";\n// import RangeSlider from \"./Components/RangeSlider\";\n// import { grey } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  },\n  icon: {\n    display: \"flex\"\n  },\n  link: {\n    textDecoration: \"none\",\n    opacity: 0.54,\n    color: \"black\"\n  },\n  top: {\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    textDecoration: \"none\",\n    color: \"white\"\n    // opacity: 0.54\n    // color: \"black\"\n  }\n});\n\nexport default function TemporaryDrawer() {\n  const [cookies, removeCookies] = useCookies([\"auth\"]);\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false\n  });\n  // const [values, setValues] = React.useState([30, 40]);\n  // const range = [18, 100];\n  // const path = window.location.pathname;\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n  // const handleChange = (event, newValue) => {\n  //   setValues(newValue);\n  // };\n\n  // DISPLAYS DRAWERS LINK AND ICONS\n  const iconsAndLinks = param => {\n    const { text, link } = param;\n    return (\n      <Link\n        to={link}\n        className={classes.link}\n        onClick={() => {\n          text === \"Disconnect\" && removeCookies(\"auth\");\n        }}\n        key={text}\n      >\n        <ListItem button>\n          <ListItemIcon>\n            {text === \"Home\" && <HomeIcon />}\n            {text === \"Search\" && <SearchIcon />}\n            {text === \"Disconnect\" && <ClearIcon />}\n            {(text === \"Connect\" || text === \"My Account\") && (\n              <AccountCircleIcon />\n            )}\n            <ListItemText>{text}</ListItemText>\n          </ListItemIcon>\n        </ListItem>\n      </Link>\n    );\n  };\n\n  // CHECKS IF USER IS AUTH IN COOKIES\n  const menuItems = [{ text: \"Home\", link: \"/\" }];\n  if (cookies.auth !== \"undefined\") {\n    menuItems.push(\n      { text: \"My Account\", link: \"/signIn\" },\n      { text: \"Search\", link: \"/Search\" },\n      { text: \"Disconnect\", link: \"/\" }\n    );\n  } else {\n    menuItems.push({ text: \"Connect\", link: \"/signIn\" });\n  }\n\n  const sideList = side => {\n    return (\n      <div\n        className={classes.list}\n        role=\"presentation\"\n        onClick={toggleDrawer(side, false)}\n        onKeyDown={toggleDrawer(side, false)}\n      >\n        <div className={classes.top}>\n          <List>\n            <ListItem>\n              <ListItemIcon>\n                <CloseIcon onClick={toggleDrawer(side, false)} />\n              </ListItemIcon>{\" \"}\n              <ListItemText>Menu</ListItemText>\n            </ListItem>\n          </List>\n        </div>\n        <List>{menuItems.map(iconsAndLinks)}</List>\n        <Divider />\n        <List>\n          {[\"About us\"].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <div onClick={toggleDrawer(\"left\", true)} className={classes.icon}>\n        <MenuButton />\n      </div>\n      <Drawer\n        open={state.left}\n        // onClose={toggleDrawer(\"left\", false)}\n      >\n        {sideList(\"left\")}\n      </Drawer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}