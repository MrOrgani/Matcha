{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\nimport { effectCar } from \"./medium\";\n\nvar nothing = function () {\n  return;\n};\n\nfunction RemoveScroll(props) {\n  var ref = React.useRef(null);\n\n  var _a = React.useState({\n    onScrollCapture: nothing,\n    onWheelCapture: nothing,\n    onTouchMoveCapture: nothing\n  }),\n      callbacks = _a[0],\n      setCallbacks = _a[1];\n\n  var forwardProps = props.forwardProps,\n      children = props.children,\n      className = props.className,\n      removeScrollBar = props.removeScrollBar,\n      enabled = props.enabled,\n      shards = props.shards,\n      sideCar = props.sideCar,\n      noIsolation = props.noIsolation,\n      inert = props.inert;\n  var SideCar = sideCar;\n\n  var containerProps = tslib_1.__assign({\n    ref: ref\n  }, callbacks);\n\n  return React.createElement(React.Fragment, null, enabled && React.createElement(SideCar, {\n    sideCar: effectCar,\n    removeScrollBar: removeScrollBar,\n    shards: shards,\n    noIsolation: noIsolation,\n    inert: inert,\n    setCallbacks: setCallbacks,\n    lockRef: ref\n  }), forwardProps ? React.cloneElement(React.Children.only(children), containerProps) : React.createElement(\"div\", tslib_1.__assign({}, containerProps, {\n    className: className\n  }), children));\n}\n\nRemoveScroll.defaultProps = {\n  enabled: true,\n  removeScrollBar: true,\n  inert: false\n};\n\n(function (RemoveScroll) {\n  RemoveScroll.classNames = {\n    fullWidth: fullWidthClassName,\n    zeroRight: zeroRightClassName\n  };\n})(RemoveScroll || (RemoveScroll = {}));\n\nexport { RemoveScroll };","map":null,"metadata":{},"sourceType":"module"}