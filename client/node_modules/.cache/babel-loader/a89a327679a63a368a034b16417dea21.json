{"ast":null,"code":"var elementCouldBeVScrolled = function (node) {\n  var styles = window.getComputedStyle(node);\n  return styles.overflowY !== 'hidden' && !(styles.overflowY === styles.overflowX && styles.overflowY === 'visible');\n};\n\nvar elementCouldBeHScrolled = function (node) {\n  var styles = window.getComputedStyle(node);\n  return styles.overflowX !== 'hidden' && !(styles.overflowY === styles.overflowX && styles.overflowX === 'visible');\n};\n\nexport var locationCouldBeScrolled = function (axis, node) {\n  var current = node;\n\n  do {\n    var isScrollable = elementCouldBeScrolled(axis, current);\n\n    if (isScrollable) {\n      var _a = getScrollVariables(axis, current),\n          s = _a[1],\n          d = _a[2];\n\n      if (s > d) {\n        return true;\n      }\n    }\n\n    current = current.parentNode;\n  } while (current && current !== document.body);\n\n  return false;\n};\n\nvar getVScrollVariables = function (_a) {\n  var scrollTop = _a.scrollTop,\n      scrollHeight = _a.scrollHeight,\n      clientHeight = _a.clientHeight;\n  return [scrollTop, scrollHeight, clientHeight];\n};\n\nvar getHScrollVariables = function (_a) {\n  var scrollLeft = _a.scrollLeft,\n      scrollWidth = _a.scrollWidth,\n      clientWidth = _a.clientWidth;\n  return [scrollLeft, scrollWidth, clientWidth];\n};\n\nvar elementCouldBeScrolled = function (axis, node) {\n  return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);\n};\n\nvar getScrollVariables = function (axis, node) {\n  return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);\n};\n\nexport var handleScroll = function (axis, endTarget, event, sourceDelta) {\n  var delta = sourceDelta;\n  var target = event.target;\n  var targetInLock = endTarget.contains(target);\n  var shouldCancelScroll = false;\n  var isDeltaPositive = delta > 0;\n  var availableScroll = 0;\n  var availableScrollTop = 0;\n\n  do {\n    var _a = getScrollVariables(axis, target),\n        position = _a[0],\n        scroll_1 = _a[1],\n        capacity = _a[2];\n\n    var elementScroll = scroll_1 - capacity - position;\n\n    if (position || elementScroll) {\n      if (elementCouldBeScrolled(axis, target)) {\n        availableScroll += elementScroll;\n        availableScrollTop += position;\n      }\n    }\n\n    target = target.parentNode;\n  } while (!targetInLock && target !== document.body || targetInLock && (endTarget.contains(target) || endTarget === target));\n\n  if (isDeltaPositive && delta > availableScroll) {\n    shouldCancelScroll = true;\n  } else if (!isDeltaPositive && -delta > availableScrollTop) {\n    shouldCancelScroll = true;\n  }\n\n  return shouldCancelScroll;\n};","map":null,"metadata":{},"sourceType":"module"}