{"ast":null,"code":"var _jsxFileName = \"/Users/vlecoq-v/42/NewMatcha/client/src/Scenes/Register/Components/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Formik, Field } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport * as yup from \"yup\";\nconst initialState = {\n  fname: \"\",\n  lname: \"\",\n  email: \"\",\n  password: \"\"\n};\nconst userSchema = yup.object().shape({\n  fname: yup.string().required(),\n  lname: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().required().max(13).min(8)\n});\n\nfunction Form(props) {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: initialState,\n    onSubmit: (values, actions) => {\n      console.log(values);\n    },\n    validationSchema: userSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props => React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    onChange: props.handleChange,\n    name: \"email\",\n    value: props.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"password\",\n    onChange: props.handleChange,\n    name: \"password\",\n    value: props.values.password,\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"fname\",\n    onChange: props.handleChange,\n    value: props.values.fname,\n    type: \"text\",\n    placeholder: \"First name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"lname\",\n    onChange: props.handleChange,\n    value: props.values.lname,\n    type: \"text\",\n    placeholder: \"Last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), props.errors.name && props.touched.name ? React.createElement(\"span\", {\n    className: s.field_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, props.errors.name) : \"\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !props.dirty && !props.isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    disabled: !props.dirty,\n    onClick: props.handleReset,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Reset\"))));\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/vlecoq-v/42/NewMatcha/client/src/Scenes/Register/Components/Form.js"],"names":["React","useState","useEffect","Formik","Field","Button","yup","initialState","fname","lname","email","password","userSchema","object","shape","string","required","max","min","Form","props","values","actions","console","log","handleSubmit","handleChange","errors","name","touched","s","field_text","dirty","isSubmitting","handleReset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;AAOA,MAAMC,UAAU,GAAGN,GAAG,CAACO,MAAJ,GAAaC,KAAb,CAAmB;AACpCN,EAAAA,KAAK,EAAEF,GAAG,CAACS,MAAJ,GAAaC,QAAb,EAD6B;AAEpCP,EAAAA,KAAK,EAAEH,GAAG,CAACS,MAAJ,GAAaC,QAAb,EAF6B;AAGpCN,EAAAA,KAAK,EAAEJ,GAAG,CACPS,MADI,GAEJL,KAFI,GAGJM,QAHI,EAH6B;AAOpCL,EAAAA,QAAQ,EAAEL,GAAG,CACVS,MADO,GAEPC,QAFO,GAGPC,GAHO,CAGH,EAHG,EAIPC,GAJO,CAIH,CAJG;AAP0B,CAAnB,CAAnB;;AAcA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEb,YADjB;AAEE,IAAA,QAAQ,EAAE,CAACc,MAAD,EAASC,OAAT,KAAqB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,KAJH;AAKE,IAAA,gBAAgB,EAAET,UALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGQ,KAAK,IACJ;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,aAFd;AAGE,IAAA,QAAQ,EAAEL,KAAK,CAACM,YAHlB;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAEN,KAAK,CAACC,MAAN,CAAaX,KALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,QAAQ,EAAEU,KAAK,CAACM,YAFlB;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEN,KAAK,CAACC,MAAN,CAAaV,QAJtB;AAKE,IAAA,WAAW,EAAC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAES,KAAK,CAACM,YAFlB;AAGE,IAAA,KAAK,EAAEN,KAAK,CAACC,MAAN,CAAab,KAHtB;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAsBE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAEY,KAAK,CAACM,YAFlB;AAGE,IAAA,KAAK,EAAEN,KAAK,CAACC,MAAN,CAAaZ,KAHtB;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,WALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,EA8BGW,KAAK,CAACO,MAAN,CAAaC,IAAb,IAAqBR,KAAK,CAACS,OAAN,CAAcD,IAAnC,GACC;AAAM,IAAA,SAAS,EAAEE,CAAC,CAACC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCX,KAAK,CAACO,MAAN,CAAaC,IAA7C,CADD,GAGC,EAjCJ,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,EAoCE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAE,CAACR,KAAK,CAACY,KAAP,IAAgB,CAACZ,KAAK,CAACa,YAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCF,EA0CE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAE,CAACb,KAAK,CAACY,KADnB;AAEE,IAAA,OAAO,EAAEZ,KAAK,CAACc,WAFjB;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA1CF,CARJ,CADF,CADF;AAgED;;AAED,eAAef,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Formik, Field } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport * as yup from \"yup\";\n\nconst initialState = {\n  fname: \"\",\n  lname: \"\",\n  email: \"\",\n  password: \"\"\n};\n\nconst userSchema = yup.object().shape({\n  fname: yup.string().required(),\n  lname: yup.string().required(),\n  email: yup\n    .string()\n    .email()\n    .required(),\n  password: yup\n    .string()\n    .required()\n    .max(13)\n    .min(8)\n});\n\nfunction Form(props) {\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues={initialState}\n        onSubmit={(values, actions) => {\n          console.log(values);\n        }}\n        validationSchema={userSchema}\n      >\n        {props => (\n          <form onSubmit={props.handleSubmit}>\n            <Field\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={props.handleChange}\n              name=\"email\"\n              value={props.values.email}\n            />\n            <Field\n              type=\"password\"\n              onChange={props.handleChange}\n              name=\"password\"\n              value={props.values.password}\n              placeholder=\"Password\"\n            />\n            <Field\n              name=\"fname\"\n              onChange={props.handleChange}\n              value={props.values.fname}\n              type=\"text\"\n              placeholder=\"First name\"\n            />\n            <Field\n              name=\"lname\"\n              onChange={props.handleChange}\n              value={props.values.lname}\n              type=\"text\"\n              placeholder=\"Last name\"\n            />\n            {/* this sends back error in case there is an error with formik passed props */}\n            {props.errors.name && props.touched.name ? (\n              <span className={s.field_text}>{props.errors.name}</span>\n            ) : (\n              \"\"\n            )}\n            <br />\n            <Button\n              type=\"submit\"\n              disabled={!props.dirty && !props.isSubmitting}\n            >\n              Submit\n            </Button>\n            <Button\n              disabled={!props.dirty}\n              onClick={props.handleReset}\n              type=\"button\"\n            >\n              Reset\n            </Button>\n          </form>\n        )}\n      </Formik>\n    </React.Fragment>\n  );\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}