{"version":3,"sources":["../src/formatters.ts"],"names":["formatError","error","code","message","build","formatEntry","entry","priorityColor","priorityModifier","messageColor","priority","Priority","FATAL","ERROR","WARN","VERBOSE","output","parseDate","date","toLetter","tag","messages","length","slice","map","line","index","arr","value","hour","getUTCHours","toString","minutes","getUTCMinutes","seconds","getUTCSeconds"],"mappings":"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","sourcesContent":["import {\n  container,\n  color,\n  modifier,\n  pad,\n  AnsiColor,\n  AnsiModifier,\n  ifElse,\n} from 'ansi-fragments';\nimport { CodeError } from './errors';\nimport { Priority } from './android/constants';\nimport { Entry } from './types';\n\nexport function formatError(error: CodeError | Error): string {\n  return container(\n    color('red', '✖︎ Ups, something went wrong'),\n    pad(2, '\\n'),\n    color('red', modifier('bold', 'CODE'), ' ▶︎ '),\n    'code' in error ? error.code : 'ERR_UNKNOWN',\n    pad(1, '\\n'),\n    color('red', modifier('bold', 'MESSAGE'), ' ▶︎ '),\n    error.message\n  ).build();\n}\n\nexport function formatEntry(entry: Entry): string {\n  let priorityColor: AnsiColor = 'none';\n  let priorityModifier: AnsiModifier = 'none';\n  let messageColor: AnsiColor = 'none';\n\n  if (entry.priority === Priority.FATAL || entry.priority === Priority.ERROR) {\n    priorityColor = 'red';\n    messageColor = 'red';\n  } else if (entry.priority === Priority.WARN) {\n    priorityColor = 'yellow';\n    messageColor = 'yellow';\n  } else if (entry.priority === Priority.VERBOSE) {\n    priorityModifier = 'dim';\n  }\n\n  const output = container(\n    modifier('dim', parseDate(entry.date)),\n    pad(1),\n    color(\n      priorityColor,\n      modifier(priorityModifier, `${Priority.toLetter(entry.priority)} |`)\n    ),\n    pad(1),\n    modifier(\n      'bold',\n      color(priorityColor, modifier(priorityModifier, entry.tag))\n    ),\n    pad(1),\n    color(priorityColor, modifier(priorityModifier, '▶︎')),\n    pad(1),\n    color(priorityColor, modifier(priorityModifier, entry.messages[0])),\n    ifElse(\n      entry.messages.length > 1,\n      container(\n        ...entry.messages\n          .slice(1)\n          .map((line: string, index: number, arr: string[]) =>\n            container(\n              pad(1, '\\n'),\n              pad(entry.tag.length + 16),\n              color(\n                priorityColor,\n                modifier(\n                  priorityColor === 'none' ? 'dim' : 'none',\n                  `${index === arr.length - 1 ? '└' : '│'} `\n                )\n              ),\n              color(priorityColor, modifier(priorityModifier, line))\n            )\n          )\n      ),\n      ''\n    )\n  ).build();\n\n  return `${output}\\n`;\n}\n\nfunction parseDate(value: Date): string {\n  const hour =\n    value.getUTCHours() < 10\n      ? `0${value.getUTCHours()}`\n      : value.getUTCHours().toString();\n  const minutes =\n    value.getUTCMinutes() < 10\n      ? `0${value.getUTCMinutes()}`\n      : value.getUTCMinutes().toString();\n  const seconds =\n    value.getUTCSeconds() < 10\n      ? `0${value.getUTCSeconds()}`\n      : value.getUTCSeconds().toString();\n  return `[${hour}:${minutes}:${seconds}]`;\n}\n"],"file":"formatters.js"}